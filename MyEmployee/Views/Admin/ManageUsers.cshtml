@using Microsoft.AspNetCore.Identity
@model IEnumerable<ApplicationUser>
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Manage Users";
    string message = (string?)TempData["message"];
    int numUsers = Model.ToList().Count;
    //we check if numusers - 1 >=0 if yes we put num users - 1 else we put 0
    int temp = numUsers - 1 > 0 ? numUsers - 1 : 1;

}
<link rel="stylesheet" href="~/css/AdminTable.css" />

<h1>Users:</h1>
@if (!string.IsNullOrEmpty(message))
{
    <div style="background-color: #4CAF50; /* Green */
                color: white;
                text-align: center;
                padding: 15px;
                width: 100%;
                margin-bottom: 15px;
                    ">
        @TempData["message"]
    </div>
}
@if (!string.IsNullOrEmpty((string?)TempData["deleted"]))
{
    <div style="background-color: indianred; /* Green */
                color: white;
                text-align: center;
                padding: 15px;
                width: 100%;
                margin-bottom: 15px;
                        ">
        @TempData["deleted"]
    </div>
}
<div class="container m-3">
    <div class="row">
        <form class="col-3 m-auto" asp-controller="Admin" asp-action="ManageUsers" method="get">
            <div class="input-group">
                <input type="search" style="border-radius: 12px" class="form-control shadow-none" placeholder="search" name="searchString" />
                <button type="submit" style="border: none; background-color: transparent"><i class="fa-solid fa-magnifying-glass"></i></button>
            </div>
        </form>
    </div>
</div>
@if (!Model.Any() || numUsers < 1)
{
    <p>@temp found</p>
    <p>No result</p>
}
else
{
    <p>@temp found </p>
    <table class="table table-borderless">
        <thead class="table-warning">
            <tr>
                <th>@Html.DisplayNameFor(Model => Model.UserName)</th>
                <th>@Html.DisplayNameFor(Model => Model.Email)</th>
                <th>@Html.DisplayNameFor(Model => Model.EmailConfirmed)</th>
                <th>Admin</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                if (user.UserName != User?.Identity?.Name)
                {
                    <tr>
                        <td>@user.UserName</td>
                        @if (await UserManager.IsInRoleAsync(user, "Manager"))
                        {
                            <td>@user.Email <br /> <span style="color: red">MANAGER</span></td>

                        }
                        else
                        {
                            <td>@user.Email</td>
                        }
                        <td>@user.EmailConfirmed</td>
                        @if (await UserManager.IsInRoleAsync(user,"Admin"))
                        {
                            <td>True</td>
                        }
                        else
                        {
                            <td>False</td>
                        }
                        <td class="d-flex justify-content-between alignt-items-center" width="150px">
                            <a asp-controller="Admin" asp-action="EditUser" asp-route-id="@user.Id">
                                <button class="btn btn-primary " style="width: 65px">Edit</button>
                            </a>
                            <form id="deleteForm" method="post" asp-controller="Admin" asp-action="DeleteUser" asp-route-id="@user.Id" onsubmit="return DisplayAlert(event)">
                                <input type="hidden" value="@user.Id" />
                                <button class="btn btn-danger " style="width: 65px">Delete</button>
                            </form>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}
@section Scripts{
    <script>
        function DisplayAlert(e)
        {
            e.preventDefault();
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: "Deleted!",
                        text: "Your user has been deleted.",
                        icon: "success"
                    });
                    setTimeout(function () {
                        document.getElementById("deleteForm").submit();
                    }, 1000);
                }
            });
            return false;
        }
    </script>
}